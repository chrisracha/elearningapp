@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using ELearningApp.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Registration Successful - E-Learning Platform</PageTitle>

<div class="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <div class="bg-white shadow-xl rounded-lg p-8 text-center">
            <div class="mb-6">
                <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100">
                    <svg class="h-6 w-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                </div>
            </div>
            
            <h1 class="text-2xl font-bold text-gray-900 mb-4">Welcome to E-Learning!</h1>
            
            @if (emailConfirmationRequired)
            {
                <p class="text-gray-600 mb-6">
                    Thank you for registering! We've sent a confirmation email to <span class="font-medium">@Email</span>. 
                    Please check your email and click the confirmation link to activate your account.
                </p>
                
                @if (displayConfirmAccountLink)
                {
                    <div class="mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-md">
                        <p class="text-sm text-yellow-800 mb-2">
                            For development purposes, you can confirm your account directly:
                        </p>
                        <a href="@emailConfirmationLink" 
                           class="text-sm font-medium text-yellow-600 hover:text-yellow-500 underline">
                            Click here to confirm account
                        </a>
                    </div>
                }
            }
            else
            {
                <p class="text-gray-600 mb-6">
                    Your account has been created successfully! You can now start exploring our courses.
                </p>
            }
            
            <div class="space-y-3">
                <a href="/" 
                   class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
                    Start Learning
                </a>
                
                <a href="Account/Login" 
                   class="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
                    Go to Login
                </a>
            </div>
        </div>
    </div>
</div>

@code {
    private string? emailConfirmationLink;
    private bool displayConfirmAccountLink = false;
    private bool emailConfirmationRequired = true;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            return;
        }

        if (await UserManager.IsEmailConfirmedAsync(user))
        {
            emailConfirmationRequired = false;
        }
        else
        {
            // In development, optionally display the confirm account link
            if (HttpContext.RequestServices.GetRequiredService<IWebHostEnvironment>().IsDevelopment())
            {
                displayConfirmAccountLink = true;
                var userId = await UserManager.GetUserIdAsync(user);
                var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
                code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
                emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                    NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                    new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
            }
        }
    }
}
