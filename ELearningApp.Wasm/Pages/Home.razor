@page "/"
@using ELearningApp.Wasm.Services
@inject ISimpleCourseService CourseService

<PageTitle>ELearning App</PageTitle>

<div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold text-center mb-8">Welcome to ELearning App</h1>
    
    @if (courses == null)
    {
        <div class="text-center">
            <p>Loading courses...</p>
        </div>
    }
    else if (courses.Any())
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            @foreach (var course in courses.Take(6))
            {
                <div class="bg-white rounded-lg shadow-md overflow-hidden">
                    <img src="@course.ImageUrl" alt="@course.Title" class="w-full h-48 object-cover" />
                    <div class="p-4">
                        <h3 class="font-semibold text-lg mb-2">@course.Title</h3>
                        <p class="text-gray-600 text-sm mb-2">@course.ShortDescription</p>
                        <div class="flex justify-between items-center">
                            <span class="text-blue-600 font-semibold">Free</span>
                            <button class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
                                View Course
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center">
            <p>No courses available.</p>
        </div>
    }
</div>

@code {
    private IEnumerable<Course>? courses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            courses = await CourseService.GetAllCoursesAsync();
        }
        catch (Exception ex)
        {
            // Handle error - for now just log to console
            Console.WriteLine($"Error loading courses: {ex.Message}");
            courses = Enumerable.Empty<Course>();
        }
    }
}
