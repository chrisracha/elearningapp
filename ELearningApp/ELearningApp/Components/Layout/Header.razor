@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using ELearningApp.Services
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IUserService UserService
@rendermode InteractiveServer

<header class="bg-white shadow-sm border-b border-gray-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
            
            <!-- Logo and Brand -->
            <div class="flex items-center">
                <a href="/" class="flex items-center">
                    <div class="w-8 h-8 bg-primary-600 rounded-lg flex items-center justify-center mr-3">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                        </svg>
                    </div>
                    <span class="text-xl font-bold text-gray-900">EduPlatform</span>
                </a>
            </div>

            <!-- Main Navigation -->
            <nav class="hidden md:flex items-center space-x-8">
                <a href="/" class="@GetNavLinkClasses("/") font-medium transition-colors">
                    Home
                </a>
                <a href="/catalog" class="@GetNavLinkClasses("/catalog") font-medium transition-colors">
                    Explore
                </a>
                
                <AuthorizeView>
                    <Authorized>
                        @if (currentUser != null && currentUser.IsInstructor)
                        {
                            <!-- Instructor Navigation -->
                            <a href="/instructor/courses" class="@GetNavLinkClasses("/instructor/courses") font-medium transition-colors">
                                Manage
                            </a>
                        }
                        else
                        {
                            <!-- Student Navigation -->
                            <a href="/dashboard" class="@GetNavLinkClasses("/dashboard") font-medium transition-colors">
                                My Learning
                            </a>
                        }
                    </Authorized>
                </AuthorizeView>
            </nav>

            <!-- User Menu -->
            <div class="flex items-center space-x-4">
                <AuthorizeView>
                    <Authorized>
                        <!-- User Profile Section -->
                        <div class="flex items-center space-x-3">
                            <!-- Profile Image and Name -->
                            <button @onclick="NavigateToProfile" class="flex items-center space-x-2 hover:bg-gray-50 rounded-lg px-2 py-1 transition-colors">
                                <div class="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center">
                                    @if (!string.IsNullOrEmpty(currentUser?.ProfileImageUrl))
                                    {
                                        <img src="@currentUser.ProfileImageUrl" alt="Profile" class="w-8 h-8 rounded-full object-cover">
                                    }
                                    else
                                    {
                                        <svg class="w-5 h-5 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                                    </svg>
                                    }
                                </div>
                                <span class="text-blue-600 font-medium hover:text-blue-700 transition-colors">
                                    @(currentUser?.FirstName ?? context.User.Identity?.Name)
                                </span>
                            </button>

                            <!-- Sign Out Button -->
                            <form action="/Account/Logout" method="post" class="inline">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@CurrentUrl" />
                                <button type="submit" class="px-3 py-2 font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-md transition-colors">
                                    Sign Out
                                </button>
                            </form>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <!-- Guest Navigation -->
                        <div class="flex items-center space-x-4">
                            <a href="/Account/Login" class="text-gray-700 hover:text-primary-600 font-medium transition-colors">
                                Login
                            </a>
                            <a href="/Account/Register" 
                               class="bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 transition-colors font-medium">
                                Sign Up
                            </a>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>

                <!-- Mobile Menu Button -->
                <button @onclick="ToggleMobileMenu" 
                        class="md:hidden p-2 rounded-md text-gray-700 hover:text-primary-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Mobile Menu -->
        @if (isMobileMenuOpen)
        {
            <div class="md:hidden border-t border-gray-200 pt-4 pb-4">
                <div class="space-y-2">
                    <a href="/" class="block px-3 py-2 text-base font-medium @GetMobileNavLinkClasses("/") hover:bg-gray-50 rounded-md">
                        Home
                    </a>
                    <a href="/catalog" class="block px-3 py-2 text-base font-medium @GetMobileNavLinkClasses("/catalog") hover:bg-gray-50 rounded-md">
                        Explore
                    </a>
                    
                    <AuthorizeView>
                        <Authorized>
                            @if (currentUser != null && currentUser.IsInstructor)
                            {
                                <a href="/instructor/courses" class="block px-3 py-2 text-base font-medium @GetMobileNavLinkClasses("/instructor/courses") hover:bg-gray-50 rounded-md">
                                    Manage
                                </a>
                            }
                            else
                            {
                                <a href="/dashboard" class="block px-3 py-2 text-base font-medium @GetMobileNavLinkClasses("/dashboard") hover:bg-gray-50 rounded-md">
                                    My Learning
                                </a>
                            }
                            
                            <!-- Mobile Profile Section -->
                            <div class="px-3 py-2 border-t border-gray-200 mt-2 pt-2">
                                <button @onclick="NavigateToProfile" class="flex items-center space-x-2 w-full text-left py-2 hover:bg-gray-50 rounded-md">
                                    <div class="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center">
                                        @if (!string.IsNullOrEmpty(currentUser?.ProfileImageUrl))
                                        {
                                            <img src="@currentUser.ProfileImageUrl" alt="Profile" class="w-8 h-8 rounded-full object-cover">
                                        }
                                        else
                                        {
                                            <svg class="w-5 h-5 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                                            </svg>
                                        }
                                    </div>
                                    <span class="text-blue-600 font-medium">
                                        @(currentUser?.FirstName ?? context.User.Identity?.Name)
                                    </span>
                                </button>
                                
                                <form action="/Account/Logout" method="post" class="mt-2">
                                    <AntiforgeryToken />
                                    <input type="hidden" name="ReturnUrl" value="@CurrentUrl" />
                                    <button type="submit" class="w-full text-left px-3 py-2 font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-md">
                                        Sign Out
                                    </button>
                                </form>
                            </div>
                        </Authorized>
                        <NotAuthorized>
                            <div class="px-3 py-2 space-y-2">
                                <a href="/Account/Login" class="block w-full text-center px-4 py-2 text-base font-medium text-gray-700 hover:text-primary-600 border border-gray-300 rounded-md">
                                    Login
                                </a>
                                <a href="/Account/Register" class="block w-full text-center px-4 py-2 text-base font-medium text-white bg-primary-600 hover:bg-primary-700 rounded-md">
                                    Sign Up
                                </a>
                            </div>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            </div>
        }
    </div>
</header>

@code {
    private bool isMobileMenuOpen = false;
    private string CurrentUrl => NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    private ApplicationUser? currentUser;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            currentUser = await UserService.GetCurrentUserAsync();
        }
        catch (Exception ex)
        {
            // Log error but don't fail the component
            Console.WriteLine($"Error loading current user in header: {ex.Message}");
        }
    }

    private void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
    }

    private void NavigateToProfile()
    {
        try
        {
            NavigationManager.NavigateTo("/profile");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error navigating to profile: {ex.Message}");
        }
    }

    private void NavigateToDashboard()
    {
        try
        {
            NavigationManager.NavigateTo("/dashboard");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error navigating to dashboard: {ex.Message}");
        }
    }

    private string GetNavLinkClasses(string path)
    {
        var currentPath = "/" + CurrentUrl.Trim('/');
        var targetPath = path.Trim('/');
        
        // Handle exact matches and special cases
        if (currentPath == "/" && targetPath == "")
        {
            return "text-blue-600 hover:text-blue-700";
        }
        
        if (targetPath != "" && currentPath.StartsWith("/" + targetPath, StringComparison.OrdinalIgnoreCase))
        {
            return "text-blue-600 hover:text-blue-700";
        }
        
        return "text-gray-700 hover:text-primary-600";
    }

    private string GetMobileNavLinkClasses(string path)
    {
        var currentPath = "/" + CurrentUrl.Trim('/');
        var targetPath = path.Trim('/');
        
        // Handle exact matches and special cases
        if (currentPath == "/" && targetPath == "")
        {
            return "text-blue-600";
        }
        
        if (targetPath != "" && currentPath.StartsWith("/" + targetPath, StringComparison.OrdinalIgnoreCase))
        {
            return "text-blue-600";
        }
        
        return "text-gray-700 hover:text-primary-600";
    }
}