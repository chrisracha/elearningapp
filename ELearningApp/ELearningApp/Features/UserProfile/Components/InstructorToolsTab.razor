@using ELearningApp.Models.Entities
@using ELearningApp.Services
@using ELearningApp.Features.Shared
@inject ICourseService CourseService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<TailwindModal Show="@showModal" Title="@modalTitle" Message="@modalMessage" OkText="@modalOkText" CancelText="@modalCancelText" ShowCancel="@modalShowCancel" Icon="@modalIcon" OnClose="OnModalClose" />

<div class="space-y-6">
    <!-- Instructor Stats -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Instructor Statistics</h3>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                <div class="text-center">
                    <div class="text-2xl font-bold text-primary-600">@instructorStats.TotalCourses</div>
                    <div class="text-sm text-gray-500">Total Courses</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-green-600">@instructorStats.TotalEnrollments</div>
                    <div class="text-sm text-gray-500">Total Enrollments</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-blue-600">@instructorStats.AverageRating.ToString("F1")</div>
                    <div class="text-sm text-gray-500">Average Rating</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-purple-600">@instructorStats.TotalRevenue.ToString("C")</div>
                    <div class="text-sm text-gray-500">Total Revenue</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Quick Actions</h3>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                <a href="/instructor/courses" 
                   class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-900">Manage Courses</p>
                        <p class="text-sm text-gray-500">View and edit your courses</p>
                    </div>
                </a>

                <a href="/instructor/courses/create" 
                   class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-900">Create Course</p>
                        <p class="text-sm text-gray-500">Start a new course</p>
                    </div>
                </a>

                <button @onclick="ShowAnalytics" 
                        class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-900">Analytics</p>
                        <p class="text-sm text-gray-500">View detailed insights</p>
                    </div>
                </button>

                <button @onclick="ShowEarnings" 
                        class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-900">Earnings</p>
                        <p class="text-sm text-gray-500">View your earnings</p>
                    </div>
                </button>

                <button @onclick="ShowStudents" 
                        class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-indigo-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-900">Students</p>
                        <p class="text-sm text-gray-500">Manage your students</p>
                    </div>
                </button>

                <button @onclick="ShowSettings" 
                        class="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-900">Instructor Settings</p>
                        <p class="text-sm text-gray-500">Configure your preferences</p>
                    </div>
                </button>
            </div>
        </div>
    </div>

    <!-- Recent Course Activity -->
    @if (recentCourses.Any())
    {
        <div class="bg-white rounded-lg shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Recent Course Activity</h3>
            </div>
            <div class="p-6">
                <div class="space-y-4">
                    @foreach (var course in recentCourses.Take(5))
                    {
                        <div class="flex items-center space-x-4 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                            <div class="flex-shrink-0">
                                <div class="w-12 h-12 bg-gray-200 rounded-lg flex items-center justify-center">
                                    @if (!string.IsNullOrEmpty(course.ImageUrl))
                                    {
                                        <img src="@course.ImageUrl" alt="@course.Title" class="w-12 h-12 rounded-lg object-cover" />
                                    }
                                    else
                                    {
                                        <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                                        </svg>
                                    }
                                </div>
                            </div>
                            <div class="flex-1 min-w-0">
                                <h4 class="text-sm font-medium text-gray-900 truncate">@course.Title</h4>
                                <div class="flex items-center space-x-4 text-xs text-gray-500 mt-1">
                                    <span>@course.EnrollmentCount students</span>
                                    <span>@course.AverageRating.ToString("F1") ⭐</span>
                                    <span>@course.ReviewCount reviews</span>
                                </div>
                            </div>
                            <div class="flex-shrink-0">
                                <div class="flex space-x-2">
                                    <a href="/course/@course.Id" 
                                       class="text-sm text-primary-600 hover:text-primary-700 font-medium">
                                        View
                                    </a>
                                    <a href="/instructor/edit-course/@course.Id" 
                                       class="text-sm text-gray-600 hover:text-gray-700 font-medium">
                                        Edit
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    <!-- Instructor Resources -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Instructor Resources</h3>
        </div>
        <div class="p-6">
            <div class="space-y-4">
                <div class="flex items-center space-x-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="flex-1">
                        <h4 class="text-sm font-medium text-blue-900">Instructor Guide</h4>
                        <p class="text-sm text-blue-700">Learn how to create engaging courses and grow your audience.</p>
                    </div>
                    <button @onclick="ShowInstructorGuide" 
                            class="text-sm text-blue-600 hover:text-blue-700 font-medium">
                        View Guide
                    </button>
                </div>

                <div class="flex items-center space-x-4 p-4 bg-green-50 rounded-lg border border-green-200">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="flex-1">
                        <h4 class="text-sm font-medium text-green-900">Best Practices</h4>
                        <p class="text-sm text-green-700">Discover proven strategies to improve your course quality and student engagement.</p>
                    </div>
                    <button @onclick="ShowBestPractices" 
                            class="text-sm text-green-600 hover:text-green-700 font-medium">
                        Learn More
                    </button>
                </div>

                <div class="flex items-center space-x-4 p-4 bg-purple-50 rounded-lg border border-purple-200">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                            </svg>
                        </div>
                    </div>
                    <div class="flex-1">
                        <h4 class="text-sm font-medium text-purple-900">Instructor Community</h4>
                        <p class="text-sm text-purple-700">Connect with other instructors and share experiences.</p>
                    </div>
                    <button @onclick="ShowCommunity" 
                            class="text-sm text-purple-600 hover:text-purple-700 font-medium">
                        Join Community
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public ApplicationUser? User { get; set; }

    private InstructorStats instructorStats = new();
    private List<Course> recentCourses = new();

    // Modal state
    private bool showModal = false;
    private string modalTitle = "";
    private string modalMessage = "";
    private string modalOkText = "OK";
    private string modalCancelText = "Cancel";
    private bool modalShowCancel = false;
    private string modalIcon = "";
    private Func<bool, Task>? modalCallback;

    protected override async Task OnInitializedAsync()
    {
        if (User != null)
        {
            await LoadInstructorData();
        }
    }

    private async Task LoadInstructorData()
    {
        try
        {
            // Load instructor courses
            recentCourses = (await CourseService.GetCoursesByInstructorAsync(User!.Id)).ToList();

            // Calculate stats
            instructorStats = new InstructorStats
            {
                TotalCourses = recentCourses.Count,
                TotalEnrollments = recentCourses.Sum(c => c.EnrollmentCount),
                AverageRating = recentCourses.Any() ? recentCourses.Average(c => c.AverageRating) : 0,
                TotalRevenue = recentCourses.Sum(c => c.EnrollmentCount * 0) // Free courses for now
            };
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("console.error", "Error loading instructor data:", ex.Message);
        }
    }

    private async Task ShowAnalytics()
    {
        await ShowInfoModal("Coming Soon", "Analytics dashboard will be implemented in Phase 2", "<svg class='w-6 h-6 text-blue-500' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'/></svg>");
    }

    private async Task ShowEarnings()
    {
        await ShowInfoModal("Coming Soon", "Earnings dashboard will be implemented in Phase 2", "<svg class='w-6 h-6 text-blue-500' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'/></svg>");
    }

    private async Task ShowStudents()
    {
        await ShowInfoModal("Coming Soon", "Student management will be implemented in Phase 2", "<svg class='w-6 h-6 text-blue-500' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'/></svg>");
    }

    private async Task ShowSettings()
    {
        await ShowInfoModal("Coming Soon", "Instructor settings will be implemented in Phase 2", "<svg class='w-6 h-6 text-blue-500' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'/></svg>");
    }

    private async Task ShowInstructorGuide()
    {
        await ShowInfoModal("Coming Soon", "Instructor guide will be available in Phase 2", "<svg class='w-6 h-6 text-blue-500' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'/></svg>");
    }

    private async Task ShowBestPractices()
    {
        await ShowInfoModal("Coming Soon", "Best practices guide will be available in Phase 2", "<svg class='w-6 h-6 text-blue-500' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'/></svg>");
    }

    private async Task ShowCommunity()
    {
        await ShowInfoModal("Coming Soon", "Instructor community will be launched in Phase 2", "<svg class='w-6 h-6 text-blue-500' fill='none' stroke='currentColor' viewBox='0 0 24 24'><path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'/></svg>");
    }

    private Task ShowInfoModal(string title, string message, string icon = "")
    {
        modalTitle = title;
        modalMessage = message;
        modalOkText = "OK";
        modalShowCancel = false;
        modalIcon = icon;
        showModal = true;
        modalCallback = null;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private async Task OnModalClose(bool ok)
    {
        showModal = false;
        StateHasChanged();
        if (modalCallback != null)
        {
            await modalCallback(ok);
        }
    }

    private class InstructorStats
    {
        public int TotalCourses { get; set; }
        public int TotalEnrollments { get; set; }
        public double AverageRating { get; set; }
        public decimal TotalRevenue { get; set; }
    }
} 