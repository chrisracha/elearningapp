@using ELearningApp.Models.Entities
@using ELearningApp.Models.Enums

<div class="space-y-6">
    <!-- Learning Overview -->
    <div class="bg-white border border-gray-200 rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Learning Progress Overview</h3>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <div class="text-center">
                    <div class="text-2xl font-bold text-blue-600">@Enrollments.Count()</div>
                    <div class="text-sm text-gray-500">Total Enrolled</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-green-600">@Enrollments.Count(e => e.ProgressPercentage >= 100)</div>
                    <div class="text-sm text-gray-500">Completed</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-yellow-600">@Enrollments.Count(e => e.ProgressPercentage > 0 && e.ProgressPercentage < 100)</div>
                    <div class="text-sm text-gray-500">In Progress</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-purple-600">@(Enrollments.Any() ? Enrollments.Average(e => e.ProgressPercentage).ToString("F0") : "0")%</div>
                    <div class="text-sm text-gray-500">Avg Progress</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enrolled Courses with Progress -->
    <div class="bg-white border border-gray-200 rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">My Courses</h3>
        </div>
        <div class="p-6">
            @if (Enrollments.Any())
            {
                <div class="space-y-6">
                    @foreach (var enrollment in Enrollments)
                    {
                        <div class="border border-gray-200 rounded-lg p-6">
                            <div class="flex items-start space-x-4">
                                <div class="w-16 h-12 bg-gray-200 rounded-lg overflow-hidden flex-shrink-0">
                                    @if (!string.IsNullOrEmpty(enrollment.Course.ImageUrl))
                                    {
                                        <img src="@enrollment.Course.ImageUrl" alt="@enrollment.Course.Title" class="w-full h-full object-cover">
                                    }
                                    else
                                    {
                                        <div class="w-full h-full bg-gradient-to-r from-primary-400 to-primary-600 flex items-center justify-center">
                                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                                            </svg>
                                        </div>
                                    }
                                </div>
                                <div class="flex-1">
                                    <h4 class="text-lg font-semibold text-gray-900 mb-2">@enrollment.Course.Title</h4>
                                    <p class="text-sm text-gray-600 mb-2">by @enrollment.Course.Instructor.FirstName @enrollment.Course.Instructor.LastName</p>
                                    
                                    <!-- Progress Bar -->
                                    <div class="mb-4">
                                        <div class="flex items-center justify-between text-sm mb-2">
                                            <span class="text-gray-600">Progress</span>
                                            <span class="font-medium text-gray-900">@((int)enrollment.ProgressPercentage)%</span>
                                        </div>
                                        <div class="w-full bg-gray-200 rounded-full h-3">
                                            <div class="@GetProgressBarColor(enrollment.ProgressPercentage) h-3 rounded-full transition-all duration-300" 
                                                 style="width: @(enrollment.ProgressPercentage)%"></div>
                                        </div>
                                    </div>
                                    
                                    <!-- Course Stats -->
                                    <div class="grid grid-cols-3 gap-4 text-sm">
                                        <div>
                                            <span class="text-gray-500">Enrolled:</span>
                                            <div class="font-medium">@enrollment.EnrollmentDate.ToString("MMM dd, yyyy")</div>
                                        </div>
                                        <div>
                                            <span class="text-gray-500">Time Spent:</span>
                                            <div class="font-medium">@(enrollment.TimeSpentMinutes / 60)h @(enrollment.TimeSpentMinutes % 60)m</div>
                                        </div>
                                        <div>
                                            <span class="text-gray-500">Status:</span>
                                            <div class="font-medium @GetStatusColor(enrollment.ProgressPercentage)">
                                                @GetStatusText(enrollment.ProgressPercentage)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-12">
                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C20.832 18.477 19.246 18 17.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                    </svg>
                    <h3 class="mt-2 text-sm font-medium text-gray-900">No enrolled courses</h3>
                    <p class="mt-1 text-sm text-gray-500">Start your learning journey by enrolling in a course!</p>
                    <div class="mt-6">
                        <a href="/catalog" 
                           class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700">
                            Browse Courses
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public List<Enrollment> Enrollments { get; set; } = new();

    private string GetProgressBarColor(double progress)
    {
        return progress switch
        {
            >= 100 => "bg-green-500",
            >= 75 => "bg-blue-500",
            >= 50 => "bg-yellow-500",
            >= 25 => "bg-orange-500",
            _ => "bg-red-500"
        };
    }

    private string GetStatusColor(double progress)
    {
        return progress switch
        {
            >= 100 => "text-green-600",
            > 0 => "text-blue-600",
            _ => "text-gray-600"
        };
    }

    private string GetStatusText(double progress)
    {
        return progress switch
        {
            >= 100 => "Completed",
            > 0 => "In Progress",
            _ => "Not Started"
        };
    }
}