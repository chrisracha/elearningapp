@page "/"
@using ELearningApp.Models.Entities
@using ELearningApp.Models.DTOs
@using ELearningApp.Services
@inject StaticDataService DataService
@inject NavigationManager Navigation

<PageTitle>Home - E-Learning Platform</PageTitle>

<!-- Hero Banner - Full Width Image Only -->
<div class="relative w-full h-80 overflow-hidden">
    <img src="https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&q=80" 
         alt="Learn Anywhere" 
         class="w-full h-full object-cover">
</div>

<!-- Browse Top Categories Section -->
<div class="py-16 bg-gray-50">
    <div class="container mx-auto px-6">
        <div class="flex justify-between items-center mb-12">
            <div>
                <h2 class="text-3xl font-bold text-gray-900 mb-2">Browse Top Categories</h2>
                <p class="text-gray-600">Start-up course</p>
                <p class="text-sm text-gray-500">Learner German taught by knowledgeable, practical professionals.</p>
            </div>
            <div class="hidden md:flex space-x-4">
                <button class="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700">Trending</button>
                <button class="px-4 py-2 text-gray-600 hover:text-gray-900">Most Popular</button>
            </div>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            @foreach (var category in categories)
            {
                <div class="bg-white rounded-lg p-6 shadow-sm hover:shadow-md transition-shadow border border-gray-100">
                    <div class="flex items-start space-x-4">
                        <div class="w-16 h-16 @category.Color rounded-lg flex items-center justify-center flex-shrink-0">
                            @{
                                var iconColor = category.IconUrl switch
                                {
                                    "code" => "w-8 h-8 text-blue-600",
                                    "briefcase" => "w-8 h-8 text-emerald-600",
                                    "paint-brush" => "w-8 h-8 text-purple-600",
                                    "language" => "w-8 h-8 text-amber-600",
                                    "chart-bar" => "w-8 h-8 text-indigo-600",
                                    "chart-pie" => "w-8 h-8 text-rose-600",
                                    _ => "w-8 h-8 text-gray-600"
                                };
                            }
                            <div class="@iconColor">
                                <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm0 4a1 1 0 011-1h12a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1V8z" clip-rule="evenodd" />
                                </svg>
                            </div>
                        </div>
                        <div class="flex-1">
                            <h3 class="text-lg font-semibold text-gray-900 mb-2">@category.Name</h3>
                            <p class="text-sm text-gray-600 mb-3">@category.Description</p>
                            <p class="text-xs text-gray-500 uppercase tracking-wide">@category.CourseCount+ Courses</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Top Courses Section -->
<div class="py-16 bg-white">
    <div class="container mx-auto px-6">
        <h2 class="text-3xl font-bold text-gray-900 mb-12">Top Courses</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            @foreach (var course in topCourses)
            {
                <div class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow cursor-pointer"
                     @onclick="() => ViewCourse(course.Id)">
                    <div class="relative">
                        <img src="@course.ImageUrl" alt="@course.Title" class="w-full h-48 object-cover">
                        @if (course.IsBestseller)
                        {
                            <div class="absolute top-3 left-3 bg-yellow-400 text-black px-2 py-1 rounded text-xs font-semibold">
                                Bestseller
                            </div>
                        }
                    </div>
                    
                    <div class="p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">@course.Title</h3>
                        <p class="text-sm text-gray-600 mb-3 line-clamp-3">@course.Description</p>
                        <p class="text-sm text-gray-700 mb-4">@course.InstructorName</p>
                        
                        <div class="flex items-center mb-4">
                            <div class="flex items-center space-x-1">
                                <span class="text-yellow-400 font-bold">@course.Rating.ToString("F1")</span>
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <svg class="w-4 h-4 @(i <= course.Rating ? "text-yellow-400" : "text-gray-300")" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                                    </svg>
                                }
                                <span class="text-sm text-gray-500 ml-2">(@course.ReviewCount.ToString("N0"))</span>
                            </div>
                        </div>
                        
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-2">
                                <span class="text-xl font-bold text-green-600">Free</span>
                            </div>
                            <span class="text-sm text-gray-600">@course.Duration</span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Trusted by Companies Section -->
<div class="py-16 bg-gray-50">
    <div class="container mx-auto px-6">
        <h2 class="text-3xl font-bold text-center text-gray-900 mb-12">Trusted by Companies</h2>
        
        <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-7 gap-8 items-center">
            @foreach (var company in trustedCompanies)
            {
                <div class="flex justify-center items-center h-16 grayscale hover:grayscale-0 transition-all">
                    <img src="@company.LogoUrl" alt="@company.Name" class="max-h-12 max-w-full object-contain">
                </div>
            }
        </div>
    </div>
</div>

<!-- Plans Section -->
<div class="py-16 bg-white">
    <div class="container mx-auto px-6">
        <div class="text-center mb-12">
            <h2 class="text-3xl font-bold text-gray-900 mb-4">Plans</h2>
            <p class="text-gray-600">Reach goals faster with our plans or programs.</p>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
            @foreach (var plan in pricingPlans)
            {
                <div class="bg-white rounded-lg shadow-lg p-8 relative @(plan.IsPopular ? "ring-2 ring-primary-500" : "border border-gray-200")">
                    @if (plan.IsPopular)
                    {
                        <div class="absolute -top-3 left-1/2 transform -translate-x-1/2 bg-primary-600 text-white px-4 py-1 rounded-full text-sm font-semibold">
                            Most Popular
                        </div>
                    }
                    
                    <div class="text-center mb-6">
                        <h3 class="text-xl font-semibold text-gray-900 mb-2">@plan.Name</h3>
                        <p class="text-gray-600 mb-4">@plan.Description</p>
                        
                        @if (plan.Price > 0)
                        {
                            <div class="text-2xl font-bold text-gray-900 mb-1">@plan.PriceDescription</div>
                        }
                        else
                        {
                            <div class="text-lg font-semibold text-gray-900 mb-1">@plan.PriceDescription</div>
                        }
                    </div>
                    
                    <button class="w-full py-3 px-4 rounded-lg font-semibold transition-colors mb-6 @(plan.IsPopular ? "bg-primary-600 text-white hover:bg-primary-700" : "bg-gray-100 text-gray-900 hover:bg-gray-200")">
                        @plan.ButtonText
                    </button>
                    
                    <ul class="space-y-3">
                        @foreach (var feature in plan.Features)
                        {
                            <li class="flex items-start space-x-3">
                                <svg class="w-5 h-5 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                </svg>
                                <span class="text-gray-700">@feature</span>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>

<!-- Testimonials Section -->
<div class="py-16 bg-gray-50">
    <div class="container mx-auto px-6">
        <h2 class="text-3xl font-bold text-center text-gray-900 mb-12">Testimonies</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
            @foreach (var testimonial in testimonials)
            {
                <div class="bg-white rounded-lg p-6 shadow-lg border border-gray-100 hover:shadow-xl transition-shadow">
                    <div class="flex items-center mb-4">
                        <img src="@testimonial.AvatarUrl" alt="@testimonial.Name" class="w-12 h-12 rounded-full object-cover mr-4">
                        <div>
                            <h4 class="font-semibold text-gray-900">@testimonial.Name</h4>
                            <div class="flex items-center space-x-1">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <svg class="w-4 h-4 @(i <= testimonial.Rating ? "text-yellow-400" : "text-gray-300")" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                                    </svg>
                                }
                                <span class="text-sm text-gray-600 ml-1">@testimonial.Rating.ToString("F1")</span>
                            </div>
                        </div>
                    </div>
                    
                    <blockquote class="text-gray-700 italic">
                        "@testimonial.Content"
                    </blockquote>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<Category> categories = new();
    private List<CourseDisplayDto> topCourses = new();
    private List<ELearningApp.Models.DTOs.Company> trustedCompanies = new();
    private List<ELearningApp.Models.DTOs.PricingPlan> pricingPlans = new();
    private List<ELearningApp.Models.DTOs.Testimonial> testimonials = new();

    protected override void OnInitialized()
    {
        categories = DataService.GetCategories();
        topCourses = DataService.GetTopCourses();
        trustedCompanies = DataService.GetTrustedCompanies();
        pricingPlans = DataService.GetPricingPlans();
        testimonials = DataService.GetTestimonials();
    }

    private void ViewCourse(int courseId)
    {
        Navigation.NavigateTo($"/course/{courseId}");
    }
}
